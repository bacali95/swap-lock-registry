import {
  fetchPackageFromRegistry,
  readFile,
  traitPackage,
  trimString,
} from '../src/utils';

describe('utils', () => {
  describe('trimString', () => {
    it('should trim a string with spaces', () => {
      expect(trimString('  ok  ')).toBe('ok');
      expect(trimString('--ok--')).toBe('--ok--');
    });

    it('should trim a string with custom character', () => {
      expect(trimString('--ok--', '-')).toBe('ok');
      expect(trimString('  ok  ', '-')).toBe('  ok  ');
    });
  });

  describe('fetchPackageFromRegistry', () => {
    it('should fetch jest package from NpmJs registry', async () => {
      const manifest = await fetchPackageFromRegistry(
        'https://registry.npmjs.com',
        'jest',
        '26.6.3',
      );

      expect(manifest.name).toBe('jest');
      expect(manifest.dist.tarball).toBe(
        'https://registry.npmjs.org/jest/-/jest-26.6.3.tgz',
      );
      expect(manifest.dist.shasum).toBe(
        '40e8fdbe48f00dfa1f0ce8121ca74b88ac9148ef',
      );
      expect(manifest.dist.integrity).toBe(
        'sha512-lGS5PXGAzR4RF7V5+XObhqz2KZIDUA1yD0DG6pBVmy10eh0ZIXQImRuzocsI/N2XZ1GrLFwTS27In2i2jlpq1Q==',
      );
    });
  });

  describe('readFile', () => {
    it('should read file correctly', async () => {
      expect(await readFile('tests/files/valid-yarn.lock'))
        .toBe(`# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
# yarn lockfile v1


sweet-collections@^1.0.3:
  version "1.0.3"
  resolved "https://registry.yarnpkg.com/sweet-collections/-/sweet-collections-1.0.3.tgz#838640556f6ab0b9f18a4ccfe0fe9f3384d5e4e4"
  integrity sha512-0P8qpGQJE32fHDKXSYu6abF+c4zAPvuEJZ3W3tYpkpIbUawbvYZq5PpaXFafWtKb9HgnMG2kxFWgdFdwqXzE8A==
`);
    });

    it('should throw error for non existent file', async () => {
      try {
        await readFile('tests/files/no-yarn.lock');
      } catch (error) {
        expect(error.message).toBe(
          "Could not read 'tests/files/no-yarn.lock'!",
        );
      }
    });
  });

  describe('traitPackage', () => {
    const url = 'https://registry.yarnpkg.com';
    const lockFile = 'yarn.lock';
    const ignore = [/.*jest.*/g];

    it('should trait correctly nest package', async () => {
      const obj = { 'jest@26.6.3': { version: '26.6.3' } };

      await traitPackage(
        obj,
        'jest@26.6.3',
        'jest',
        '26.6.3',
        {
          lockFile,
          url,
          ignore: [],
          tarballWithShaSum: true
        }
      );

      expect(obj).toEqual({
        'jest@26.6.3': {
          version: '26.6.3',
          integrity:
            'sha512-lGS5PXGAzR4RF7V5+XObhqz2KZIDUA1yD0DG6pBVmy10eh0ZIXQImRuzocsI/N2XZ1GrLFwTS27In2i2jlpq1Q==',
          resolved:
            'https://registry.yarnpkg.com/jest/-/jest-26.6.3.tgz#40e8fdbe48f00dfa1f0ce8121ca74b88ac9148ef',
        },
      });
    });

    it('should ignore nest package', async () => {
      const obj = {
        'jest@26.6.3': { version: '26.6.3' },
        'sweet-collections@^1.0.3': { version: '1.0.3' },
      };

      await traitPackage(
        obj,
        'jest@26.6.3',
        'jest',
        '26.6.3',
        {
          lockFile,
          url,
          ignore,
          tarballWithShaSum: true
        }
      );

      await traitPackage(
        obj,
        'sweet-collections@^1.0.3',
        'sweet-collections',
        '^1.0.3',
        {
          lockFile,
          url,
          ignore,
          tarballWithShaSum: true
        }
      );

      expect(obj).toEqual({
        'jest@26.6.3': { version: '26.6.3' },
        'sweet-collections@^1.0.3': {
          integrity:
            'sha512-0P8qpGQJE32fHDKXSYu6abF+c4zAPvuEJZ3W3tYpkpIbUawbvYZq5PpaXFafWtKb9HgnMG2kxFWgdFdwqXzE8A==',
          resolved:
            'https://registry.yarnpkg.com/sweet-collections/-/sweet-collections-1.0.3.tgz#838640556f6ab0b9f18a4ccfe0fe9f3384d5e4e4',
          version: '1.0.3',
        },
      });
    });

    it('should ignore special cases', async () => {
      const obj = {
        'asd@http://asdf.com/asdf.tar.gz': { version: '1.0.0' },
        'npm@git+ssh://git@github.com:npm/cli.git': { version: '7.5.4' },
        mocha: { version: 'mochajs/mocha#4727d357ea' },
        'self@file:.': { version: '1.0.0' },
      };

      await traitPackage(
        obj,
        'asd@http://asdf.com/asdf.tar.gz',
        'asd',
        'http://asdf.com/asdf.tar.gz',
        {
          lockFile,
          url,
          ignore,
          tarballWithShaSum: true
        }
      );

      await traitPackage(
        obj,
        'npm@git+ssh://git@github.com:npm/cli.git',
        'npm',
        'git+ssh://git@github.com:npm/cli.git',
        {
          lockFile,
          url,
          ignore,
          tarballWithShaSum: true
        }
      );

      await traitPackage(
        obj,
        'mocha',
        'mocha',
        'mochajs/mocha#4727d357ea',
        {
          lockFile,
          url,
          ignore,
          tarballWithShaSum: true
        }
      );

      await traitPackage(
        obj,
        'self',
        'self',
        'file:.',
        {
          lockFile,
          url,
          ignore,
          tarballWithShaSum: true
        }
      );

      expect(obj).toEqual({
        'asd@http://asdf.com/asdf.tar.gz': { version: '1.0.0' },
        'npm@git+ssh://git@github.com:npm/cli.git': { version: '7.5.4' },
        mocha: { version: 'mochajs/mocha#4727d357ea' },
        'self@file:.': { version: '1.0.0' },
      });
    });

    it('should ignore already replaced pkg', async () => {
      const obj = {
        'jest@26.6.3': {
          version: '26.6.3',
          "resolved": "https://registry.yarnpkg.com/no-matter-what-is"
        }
      };

      await traitPackage(
        obj,
        'jest@26.6.3',
        'jest',
        '26.6.3',
        {
          lockFile,
          url,
          ignore: [],
          additional: true
        }
      );

      expect(obj).toEqual({
        'jest@26.6.3': {
          version: '26.6.3',
          "resolved": "https://registry.yarnpkg.com/no-matter-what-is"
        }
      });
    });
  });
});
